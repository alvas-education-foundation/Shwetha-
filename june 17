#include<stdio.h>;
structSLL;
structTLL{
structTLL*top;
structTLL*bottom;
structSLL*next;
};
typedefstructTLLtnode;
typedefstructSLL{
charch;
structSLL*link;
};
typedefstructSLLsnode;
snode*newnode,*ptr,*prev,*temp;
snode*first=NULL,*last=NULL;
tnode*newt,*tlast=NULL,*ttemp;
//---TLLnode---
tnode*create_tnode()
{
newt=(tnode*)malloc(sizeof(tnode));
if(newt==NULL)
{
printf("\n Memory was not allocated");
return 0;
}
else
{
newt->top=NULL;
newt->bottom=NULL;
newt->next=NULL;
return newt;
}
}
snode*create_node(charc)
{
newnode=(snode*)malloc(sizeof(snode));
if(newnode==NULL)
{
printf(&quot;\nMemorywasnotallocated&quot;);
return0;
}
else
{
newnode-&gt;ch=c;
newnode-&gt;link=NULL;
returnnewnode;
}
}
//---insertSLL---
voidinsert_node_first(charc)
{
newnode=create_node(c);
if(tlast->next==NULL)
tlast->next=newnode;
if(first==last&&first==NULL)
{
first=last=newnode;
first->link=NULL;
last->link=NULL;
}
else
{
temp=first;
first=newnode;
first->link=temp;
}
printf("\n----INSERTED%cTOSLL----",c);
}
//---insertTLL---
voidinsert_Tnode()
{
newt=create_tnode();
if(tlast==NULL)
{
tlast=newt;
tlast->next=NULL;
tlast->top=NULL;
tlast->bottom=NULL;
}
else
{
ttemp=tlast;
tlast=newt;
tlast->next=NULL;
tlast->top=ttemp;
tlast->bottom=NULL;
ttemp->bottom=tlast;
}
printf("\n----CREATEDNEWTLL----");
}
voidmain()
{
chars[100],n;
int i;
scanf("%[^;]s",s);
insert_Tnode();
for(i=0;s[i]!=&#39;\0&#39;i++)
{
n=s[i];
if(n==&#39;\n&#39;)
insert_Tnode();
else
insert_node_first(n);
}
printf("\n%s\n",s);
}
